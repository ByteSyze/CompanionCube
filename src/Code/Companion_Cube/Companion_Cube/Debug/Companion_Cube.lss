
Companion_Cube.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000044  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .comment      00000030  00000000  00000000  00000098  2**0
                  CONTENTS, READONLY
  2 .debug_aranges 00000040  00000000  00000000  000000c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   0000026e  00000000  00000000  00000108  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 00000132  00000000  00000000  00000376  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   000000fd  00000000  00000000  000004a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  0000006c  00000000  00000000  000005a8  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    0000017c  00000000  00000000  00000614  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    000000f3  00000000  00000000  00000790  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_ranges 00000030  00000000  00000000  00000883  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0e c0       	rjmp	.+28     	; 0x1e <__ctors_end>
   2:	15 c0       	rjmp	.+42     	; 0x2e <__bad_interrupt>
   4:	14 c0       	rjmp	.+40     	; 0x2e <__bad_interrupt>
   6:	13 c0       	rjmp	.+38     	; 0x2e <__bad_interrupt>
   8:	12 c0       	rjmp	.+36     	; 0x2e <__bad_interrupt>
   a:	11 c0       	rjmp	.+34     	; 0x2e <__bad_interrupt>
   c:	10 c0       	rjmp	.+32     	; 0x2e <__bad_interrupt>
   e:	0f c0       	rjmp	.+30     	; 0x2e <__bad_interrupt>
  10:	0e c0       	rjmp	.+28     	; 0x2e <__bad_interrupt>
  12:	0d c0       	rjmp	.+26     	; 0x2e <__bad_interrupt>
  14:	0c c0       	rjmp	.+24     	; 0x2e <__bad_interrupt>
  16:	0b c0       	rjmp	.+22     	; 0x2e <__bad_interrupt>
  18:	0a c0       	rjmp	.+20     	; 0x2e <__bad_interrupt>
  1a:	09 c0       	rjmp	.+18     	; 0x2e <__bad_interrupt>
  1c:	08 c0       	rjmp	.+16     	; 0x2e <__bad_interrupt>

0000001e <__ctors_end>:
  1e:	11 24       	eor	r1, r1
  20:	1f be       	out	0x3f, r1	; 63
  22:	cf e5       	ldi	r28, 0x5F	; 95
  24:	d2 e0       	ldi	r29, 0x02	; 2
  26:	de bf       	out	0x3e, r29	; 62
  28:	cd bf       	out	0x3d, r28	; 61
  2a:	02 d0       	rcall	.+4      	; 0x30 <main>
  2c:	09 c0       	rjmp	.+18     	; 0x40 <_exit>

0000002e <__bad_interrupt>:
  2e:	e8 cf       	rjmp	.-48     	; 0x0 <__vectors>

00000030 <main>:
/**
* Sets the I/O direction of the specified pin. 1 for output, 0 for input.
*/
void set_pin_dir(char pin, char dir)
{
	DDRB |= (dir & 0x01) << pin;
  30:	87 b3       	in	r24, 0x17	; 23
  32:	87 bb       	out	0x17, r24	; 23
  34:	b9 9a       	sbi	0x17, 1	; 23
  36:	ba 9a       	sbi	0x17, 2	; 23
  38:	bb 9a       	sbi	0x17, 3	; 23
  3a:	bc 9a       	sbi	0x17, 4	; 23
	return PINB >> pin & 0x01;
}

void set_pin(char pin, char val)
{
	PORTB |= (val & 0x01) << pin;
  3c:	c1 9a       	sbi	0x18, 1	; 24
  3e:	fe cf       	rjmp	.-4      	; 0x3c <main+0xc>

00000040 <_exit>:
  40:	f8 94       	cli

00000042 <__stop_program>:
  42:	ff cf       	rjmp	.-2      	; 0x42 <__stop_program>
